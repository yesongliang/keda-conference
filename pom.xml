<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.kedacom.tz.sh</groupId>
	<artifactId>keda-conference</artifactId>
	<version>0.0.1</version>
	<name>keda-conference</name>
	<description>科达会议平台api对接模块</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<!-- 测试 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<!-- <exclusions> <exclusion> <groupId>org.junit.vintage</groupId> <artifactId>junit-vintage-engine</artifactId> 
				</exclusion> </exclusions> -->
		</dependency>

		<!-- 属性书写工具 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<!-- eureka client -->
		<!-- <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId> 
			</dependency> -->

		<!-- web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- cometd相关依赖：start -->
		<dependency>
			<groupId>org.cometd.java</groupId>
			<artifactId>cometd-java-server</artifactId>
			<version>3.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.cometd.java</groupId>
			<artifactId>cometd-java-client</artifactId>
			<version>3.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.cometd.java</groupId>
			<artifactId>cometd-java-annotations</artifactId>
			<version>3.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.cometd.java</groupId>
			<artifactId>bayeux-api</artifactId>
			<version>3.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.cometd.java</groupId>
			<artifactId>cometd-websocket-jetty</artifactId>
			<version>2.9.1</version>
		</dependency>
		<dependency>
			<groupId>org.cometd.java</groupId>
			<artifactId>cometd-java-websocket-common-client</artifactId>
			<version>3.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.cometd.java</groupId>
			<artifactId>cometd-java-websocket-jetty-client</artifactId>
			<version>3.0.9</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-api</artifactId>
		</dependency>
		<!-- cometd相关依赖：end -->

		<!-- 引入服务容错 Hystrix 的依赖 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
			<version>2.2.3.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp -->
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<!-- <version>4.7.2</version> -->
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<!-- <dependency> <groupId>org.apache.httpcomponents</groupId> <artifactId>httpclient</artifactId> 
			<version>4.5.12</version> </dependency> -->

		<!-- JSON转换工具 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.62</version>
		</dependency>

		<!-- swagger2 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.9.2</version>
		</dependency>

		<!-- 参数验证 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- redis -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<!-- 解决故障转移情况下的缺陷 redlock -->
		<!-- <dependency> <groupId>org.redisson</groupId> <artifactId>redisson</artifactId> 
			<version>3.13.4</version> </dependency> -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<!-- Spring Cloud的命名没有按照版本方式管理，是采用命名方式， 版本名称采用伦敦地铁站的名称命名，根据字母表的顺序对应版本时间顺序， 
		比如最早的Release版本号为Angel，第二个Release版本为Brixton -->
	<!-- <dependencyManagement> <dependencies> <dependency> <groupId>org.springframework.cloud</groupId> 
		<artifactId>spring-cloud-dependencies</artifactId> <version>Hoxton.SR5</version> 
		<type>pom</type> <scope>import</scope> </dependency> </dependencies> </dependencyManagement> -->

	<build>
		<plugins>
			<!-- boot打包插件 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
